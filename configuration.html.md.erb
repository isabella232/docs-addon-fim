---
title: Configuring File Integrity Monitoring
owner: Security Engineering
---

<strong><%= modified_date %></strong>

This topic describes how to configure and use <%= vars.product_full %> (<%= vars.product_abbr %>).

##<a id="dirs"></a>List Directories to be Monitored

<%= vars.product_abbr %> monitors a set of critical system directories.
<%# maybe add a sentence saying to see subsections for installation specific info.%>

You can configure the list of directories that <%= vars.product_abbr %> monitors
using the **Watchlist** field.
For instructions, see **Watchlist**
in [Configure <%= vars.product_abbr %> for Ubuntu](./installing.html#configure-ubuntu)
or [Configure <%= vars.product_abbr %> for Windows](./installing#configure-windows),  depending on your installation.


###<a name="linux-dirs"></a> Watchlist for Linux

The default value of **Watchlist** for Linux is:

```
# System binaries and configuration
- /bin
- /etc
- /lib
- /lib32
- /lib64
- /opt
- /sbin
- /srv
- /usr
- /var/lib

# BOSH agent
- /var/vcap/bosh
- /var/vcap/monit/job

# BOSH releases
- /var/vcap/data/packages
- /var/vcap/data/jobs
```

###<a name="windows-dirs"></a> Watchlist for Windows

The default value of **Watchlist** for Windows is:

```
- C:\Windows\System32
- C:\Program Files
- C:\Program Files (x86)
- C:\var\vcap\bosh
- C:\var\vcap\data\packages
- C:\var\vcap\data\jobs
```

##<a id="output-logs"></a>Event Logging

<%= vars.product_abbr %> logs events that occur.
You can use these samples to configure a Security Information and Event Management (SIEM)
system, to verify regular activity and generate alerts for unauthorized changes to a file.

These logs appear in the following format:
<pre>
CEF:0|cloud_foundry|fim|1.0.0|OPERATION-TYPE|file integrity monitoring event|SEVERITY| fname="ABSOLUTE-PATH" hostname="BOSH-VM" opname="OPERATION-NAME" optype=OPERATION-TYPE ts=TIMESTAMP severity=SEVERITY
</pre>

Where:

* `OPERATION-TYPE` and `OPERATION-NAME` are one of the below:
    * `1`, which is `CREATE`
    * `2`, which is `WRITE`
    * `4`, which is `REMOVE`
    * `8`, which is `RENAME`
    * `16`, which is `CHMOD`

* `SEVERITY` is one of the following severity levels:
    * `0`, which is used for heartbeats
    * `3`, which is used for low severity events
    * `5`, which is used for all other events

* `ABSOLUTE-PATH` is the absolute path to the file, for example `/directory/file`

* `BOSH-VM` is the BOSH VM name, for example `/directory/vm-name`

* `TIMESTAMP` is the timestamp in Unix epoch format.

For example:
<pre class="terminal">
CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|3| fname="/test/file01" hostname="fim/a6fbc720-cfd1-47fc-a257-c211704924a6" opname="CREATE" optype=1 ts=1546535400 severity=3

CEF:0|cloud_foundry|fim|1.0.0|2|file integrity monitoring event|5| fname="/test/file02" hostname="fim/a6fbc720-cfd1-47fc-a257-c211704924a6" opname="WRITE" optype=2 ts=1546535520 severity=5
</pre>

For an example of every type of <%= vars.product_abbr %> log message that can be configured, see [Examples of <%= vars.product_abbr %> Log Messages](./log-examples.html).

<p class="note"><strong>Note</strong>:
Low severity events can be used to filter out business-as-usual events.
This allows you to isolate unexpected events by looking for severity <code>5</code>.
</p>

##<a id="output-ignore"></a>Ignore Events

Some monitored directories might contain files that you do not want
<%= vars.product_abbr %> to monitor, for example, files that change frequently.
<%# maybe add a sentence saying to see subsections for installation specific info.%>

You can configure <%= vars.product_abbr %> to ignore events using path regular
expressions using the **Ignore patterns** field.
For instructions, see **Ignore patterns**
in [Configure <%= vars.product_abbr %> for Ubuntu](./installing.html#configure-ubuntu)
or [Configure <%= vars.product_abbr %> for Windows](./installing#configure-windows),  depending on your installation.

<p class="note"><strong>Note</strong>:
  The regular expressions must be compatible with regular expression syntax for golang.
  To test whether a regular expression is valid, you can use <a href="https://regex101.com?flavor=golang">Regex101</a>.
</p>

###<a name="linux-ignore"></a> Ignore Patterns for Linux

The default values for **Ignore patterns** for Linux are:

```
# Temporary files created when an operator or errand invoke `bosh ssh`
- ^/etc/passwd.+$
- ^/etc/shadow.+$
- ^/etc/subgid.+$
- ^/etc/subuid.+$
- ^/etc/group.+$
- ^/etc/gshadow.+$

# Temporary files created when hosts updated
- ^/etc/hosts.+$

# BOSH Agent logs
- ^/var/vcap/bosh/log/.+$

# Log rotation
- ^/var/lib/logrotate/status.*$
```

###<a name="windows-ignore"></a> Ignore Patterns for Windows

<p class="note"><strong>Note</strong>:
There is currently no default value for <strong>Ignored patterns</strong> for Windows.
</p>

When defining **Ignore patterns** for Windows, you must replace all single
back slashes with double back slashes.
For example, to ignore all files in the directory `C:\var\vcap\bosh\ignore_me\`, use:

```
^C:\\var\\vcap\\bosh\\ignore_me\\.*$
```


##<a id="output-low"></a>Low Severity Events

Some monitored directories might contain files that occasionally change.
<%# maybe add a sentence saying to see subsections for installation specific info. %>

You can configure <%= vars.product_abbr %> to log events at a lower severity using
path regular exepressions using the **Low severity tagging for frequently changed
files** field.
For instructions, see **Low severity tagging for frequently changed files**
in [Configure <%= vars.product_abbr %> for Ubuntu](./installing.html#configure-ubuntu)
or [Configure <%= vars.product_abbr %> for Windows](./installing#configure-windows),  depending on your installation.


<p class="note"><strong>Note</strong>:
  The regular expressions must be compatible with regular expression syntax for golang.
  To test whether a regular expression is valid, you can use <a href="https://regex101.com?flavor=golang">Regex101</a>.
</p>

###<a name="linux-output-low"></a> Low Severity Tagging for Frequently Changed Files for Linux

The default values for **Low severity tagging for frequently changed files** for Linux are:

```
# When an operator or errand invoke `bosh ssh` a new user is created
- ^/etc/passwd$
- ^/etc/shadow$
- ^/etc/subgid$
- ^/etc/subuid$
- ^/etc/group$
- ^/etc/gshadow$

# BOSH-DNS sync and new VM creation update hosts
- ^/etc/hosts$

# Attached devices and cgroups
- ^/etc/mtab$

# DHCP leases
- ^/var/lib/dhcp/dhclient.eth\d+.leases$

# BOSH Agent configuration changes when VM created/modified
- ^/var/vcap/bosh/settings.json$

# BOSH Agent CHMODs jobs and packages as part of `bosh deployment`
- ^/var/vcap/data/jobs$
- ^/var/vcap/data/packages$
```

###<a name="windows-output-low"></a> Low Severity Tagging for Frequently Changed Files for Windows

<p class="note"><strong>Note</strong>:
There is currently no default value for <strong>Low severity tagging for frequently changed files</strong> for Windows.
</p>

When defining **Low severity tagging for frequently changed files** for Windows, you must replace all single
back slashes with double back slashes.
For example, to mark all files in the directory `C:\var\vcap\bosh\ignore_me\` as low severity, use:

```
^C:\\var\\vcap\\bosh\\ignore_me\\.*$
```

##<a id="format"></a>Configure the Output Format

By default, <%= vars.product_abbr %> generates messages in the Common Event Format.
<%# maybe add a sentence saying to see subsections for installation specific info.%>

You can configure the output format as a golang text template using the **Output log format** field.
For instructions, see **Output log format**
in [Configure <%= vars.product_abbr %> for Ubuntu](./installing.html#configure-ubuntu)
or [Configure <%= vars.product_abbr %> for Windows](./installing#configure-windows),  depending on your installation.

The default value of **Output log format** is:

```
"CEF:0|cloud_foundry|fim|1.0.0|{{.Optype}}|file integrity monitoring event|{{.Severity}}| {{.KeyValues}}"
```

This example output shows what log lines look like with the default **Output log format** configuration:

```
CEF:0|cloud_foundry|fim|1.0.0|0|file integrity monitoring event|0| fname="" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="FILESNITCH_CHECKIN" optype=0 ts=1492715822 severity=0
CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/etc/passwd.lock" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="CREATE" optype=1 ts=1492715822 severity=5
CEF:0|cloud_foundry|fim|1.0.0|4|file integrity monitoring event|5| fname="/etc/passwd.17721" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="REMOVE" optype=4 ts=1492715822 severity=5
CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/etc/group.lock" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="CREATE" optype=1 ts=1492715822 severity=5
CEF:0|cloud_foundry|fim|1.0.0|4|file integrity monitoring event|5| fname="/etc/group.17721" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="REMOVE" optype=4 ts=1492715822 severity=5
CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/etc/gshadow.lock" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="CREATE" optype=1 ts=1492715822 severity=5
```

<p class="note"><strong>Note</strong>:
  The <code>FILESNITCH CHECKIN</code> message is a logging marker that indicates
  <code>filesnitch</code> is operational in the absence of any file system events.
</p>

The key-values pairs in the final field of a CEF file log carry the following meaning:

* `fname` is the name of the affected file.
* `hostname` is the hostname of the VM on which the file event originated.
* `ts` is the point in time at which <%= vars.product_abbr %> received the file event.
* `optype` and `opname` are the type of file operation in the numeric and textual format, respectively.
   The possible values of the two fields are described by the table below:

    <table class="nice">
        <th width="5%">opname</th>
        <th width="5%">optype</th>
        <th width="45%">Example Linux Trigger</th>
        <th width="45%">Example Windows Trigger</th>
        <tr>
            <td>CREATE</td>
            <td align="center">1</td>
            <td>
              <code>touch newfile.txt</code>
              <br>
              <br>
              <code>echo 'content' > newfile2.txt</code>
            </td>
            <td>
              <code>Powershell New-Item -type File newfile.txt</code>
              <br>
              <br>
              <code>Powershell Add-Content -Path newfile.txt -Value 'content'</code>
            </td>
        </tr>
        <tr>
            <td>WRITE</td>
            <td align="center">2</td>
            <td>
              <code>echo 'hello world' >> file.txt</code>
            </td>
            <td>
              <code>Powershell Add-Content -Path newfile.txt -Value 'content'</code>
            </td>
        </tr>
        <tr>
            <td>REMOVE</td>
            <td align="center">4</td>
            <td>
              <code>rm file.txt</code>
            </td>
            <td>
              <code>Powershell rm file.txt</code>
            </td>
        </tr>
        <tr>
            <td>RENAME</td>
            <td align="center">8</td>
            <td>
              <code>mv file.txt file.txt.orig</code>
            </td>
            <td>
              <code>Powershell mv file.txt file.txt.orig</code>
            </td>
        </tr>
        <tr>
            <td>CHMOD</td>
            <td align="center">16</td>
            <td>
              <code>chmod 0400 file.txt</code>
              <br>
              <br>
              <code>touch existingfile.txt</code>
            </td>
            <td>
              <code>Powershell icacls file.txt /grant administrators:F</code>
            </td>
        </tr>
    </table>


<p class="note"><strong>Note: </strong>
  <%= vars.product_abbr %> on Windows reports <code>WRITE</code> and <code>CHMOD</code>
  together as <code>WRITE|CHMOD</code>. The two operations are indistinguishable.
</p>

Other template values are listed below.

###<a id="json"></a>JSON
The `{{.Json}}` string serializes an event into a standard JSON dictionary.
Example:

```json
{"fname":"/bin/binary","hostname":"plymouth","opname":"CREATE","optype":1,"ts":1475195084}
```

###<a id="keyvalues"></a>Key-Values
The `{{.KeyValues}}` string serializes an event into a series of `key=value` fields.
Example:

```
fname="/bin/binary" hostname="plymouth" opname="CREATE" optype=1 ts=1475195258
```

###<a id="fields"></a>Individual Fields
| Template | Description |
|----------|-------------|
| `{{.Fname}}` | Name of the affected file |
| `{{.Hostname}}` | Hostname of the VM on which the file event originated |
| `{{.OpName}}` | Type of file operation in textual format |
| `{{.OpType}}` | Type of file operation in numeric format |
| `{{.Severity}}` | Level of importance attributed to the event |
| `{{.Ts}}` | Point in time at which <%= vars.product_abbr %> received the file event |
| `{{.Digests}}` | Key-value pairs of hash algorithms and the hash of the modified file |

For example, the following variable definition...

```
format: "{{.Fname}} {{.Hostname}} {{.OpName}} {{.OpType}} {{.Digests}} {{.Ts}}"
```

...produces this:

```
/bin/binary plymouth CREATE 1 sha256=da39a3ee5e6b4b0d3255bfef95601890afd80709 1475195574
```

##<a id="digests"></a>Calculate File Hashes

<%= vars.product_abbr %> supports hashing monitored files on WRITE or CREATE events
using the `sha256` algorithm.
Hashing is disabled by default.

You can enable hashing using the **Log file digest for write/create events** field.
For instructions, see **Log file digest for write/create events**
in [Configure <%= vars.product_abbr %> for Ubuntu](./installing.html#configure-ubuntu)
or [Configure <%= vars.product_abbr %> for Windows](./installing#configure-windows),  depending on your installation.

###<a id="digest_threshold"></a>File Size Threshold

<%= vars.product_abbr %> sets a threshold on the size of files, in bytes, to be hashed.
The default value is `10000000` bytes.

You can adjust the threshold using the **Log file digest for write/create events** field.
For instructions, see **Log file digest for write/create events**
in [Configure <%= vars.product_abbr %> for Ubuntu](./installing.html#configure-ubuntu)
or [Configure <%= vars.product_abbr %> for Windows](./installing#configure-windows),  depending on your installation.

##<a id="monitor-containers"></a>Monitor Containers with <%= vars.product_abbr %>

You can use <%= vars.product_abbr %> to monitor:

* Garden containers on the Diego Cell VMs in <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>)
* Containers on the Diego Windows Cell VMs in <%= vars.windows_runtime_full %> (<%= vars.windows_runtime_abbr %>)
* Containers on the Kubernetes worker node VMs in <%= vars.k8s_runtime_full %> (<%= vars.k8s_runtime_abbr %>)


###<a id="garden"></a> Monitor Garden Containers

To configure <%= vars.product_abbr %> to monitor Garden containers:

1. In the <%= vars.product_abbr %> tile, select **<%= vars.product_abbr %> Configuration for Ubuntu**.

1. Add the following directories to the **Watchlist** field:

    ```
    # Garden containers
    - /var/vcap/data/grootfs/store/unprivileged/images/
    - /var/vcap/data/grootfs/store/privileged/images/
    ```

    For more information about the **Watchlist** field, see [List Directories to Be Monitored](#dirs) above.

    For more information about GrootFS volumes,
    see [Volumes](https://docs.pivotal.io/pivotalcf/concepts/grootfs-disk.html#volumes).

2. Add the following pattern to the **Ignore patterns** field:

    ```
    # When monitoring Garden containers,
    # ignore duplicate log messages sent to .../UUID/rootfs/
    - ^/var/vcap/data/grootfs/store/(un)?privileged/images/[\w-]+/rootfs/.*$
    ```

    For more information about the **Ignore patterns** field, see [Ignore Events](#output-ignore) above.

    <p class="note"><strong>Note:</strong> When files in the Garden containers are modified,
      changes are made to both the <code>diff</code> and <code>rootfs</code> directories.
    Adding this ignore pattern means that files and directories
    in the <code>/var/vcap/data/grootfs/store/unprivileged/images/UUID/diff</code>
    directory are ignored by <%= vars.product_abbr %>. <code>UUID</code> is the ID of the container.
    </p>

For an example log message, see [Examples of Log Messages from Containers](./log-examples.html#container-examples).

###<a id="garden-windows"></a> Monitor Windows Garden Containers

To configure <%= vars.product_abbr %> to monitor Windows Garden containers:

1. In the <%= vars.product_abbr %> tile, select **<%= vars.product_abbr %> Configuration for Windows (beta)**.

1. Add the following directories to the **Watchlist** field:

    ```
    # Garden containers
    - C:\proc
    ```

    For more information about the **Watchlist** field, see [List Directories to Be Monitored](#dirs) above.

2. Pivotal recommends that you add the following patterns to the **Ignore patterns** field:

    ```
    # Pivotal recommends ignoring paths in the container other than the application files
    # These files reside in C:\proc\PID\root\Users\vcap\app\*
    - ^C:\\proc\\[^\\]+\\root\\[^U]
    - ^C:\\proc\\[^\\]+\\root\\Users\\[^v]
    - ^C:\\proc\\[^\\]+\\root\\Users\\vcap\\[^a]
    ```

    For more information about the **Ignore patterns** field, see [Ignore Events](#output-ignore) above.
    <br><br>
    When files and directories in the `C:\proc\PID\root` directory
    are created, removed, or modified, <%= vars.product_abbr %> writes log messages.
    `PID` is the process ID of the container.

    <p class="note"><strong>Note:</strong>
      The above recommendations for <strong>Ignore patterns</strong> ignore all events
      in the container filesystem outside of <code>C:\proc\PID\root\Users\vcap\app</code>.
    </p>

For an example log message, see [Examples of Log Messages from Containers](./log-examples.html#container-examples).

###<a id="pks"></a> Monitor Containers in <%= vars.k8s_runtime %>

To configure <%= vars.product_abbr %> to monitor containers on the Kubernetes worker node VMs in <%= vars.k8s_runtime %>:

1. In the <%= vars.product_abbr %> tile, select **<%= vars.product_abbr %> Configuration for Ubuntu**.

1. Add the following directory to the **Watchlist** field:

    ```
    # Containers in PKS
    - /var/vcap/store/docker/docker/
    ```

    For more information about the **Watchlist** field, see [List Directories to Be Monitored](#dirs) above.

When files and directories in the `/var/vcap/store/docker/docker/overlay2/UUID/diff` directory
are created, removed, or modified, <%= vars.product_abbr %> writes log messages.
`UUID` is the ID of the container.

For an example log message, see [Examples of Log Messages from Containers](./log-examples.html#container-examples).
