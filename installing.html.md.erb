---
title: Installing and Configuring File Integrity Monitoring
owner: Security Engineering
---

<strong><%= modified_date %></strong>

This topic describes how to install <%= vars.product_full %>
(<%= vars.product_abbr %>).

<p class="note"><strong>Note:</strong>
  When you install the <%= vars.product_abbr %> tile using Ops Manager,
  <%= vars.product_abbr %> does not monitor the files on your BOSH Director.
  To apply <%= vars.product_abbr %> to the BOSH Director VM,
  see <a href="./installing-bosh.html">Installing File Integrity Monitoring on BOSH Director</a>.
</p>


##<a id="prereqs"></a>Prerequisites

* You must be a <%= vars.platform_name %> operator with admin rights.
See [Operators](https://docs.pivotal.io/pivotalcf/customizing/user-types.html#operator)
in the <%= vars.platform_name %> documentation.

* **<%= vars.ops_manager_full %> (<%= vars.ops_manager %>)**.
For compatible versions, see the [Product Snapshot](./index.html#snapshot).

## <a id='install-addon'></a> Install <%= vars.product_abbr %>

To install the <%= vars.product_abbr %> file on the <%= vars.ops_manager %> Installation Dashboard:

<p class="note"><strong>Note:</strong> If you are upgrading from v1.4 or below,
  you must follow the instructions in <a href="./upgrading.html">Upgrading <%= vars.product_abbr %></a>.
</p>

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/p-fim-addon).

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard and click **Import a Product** to upload the product file.

1. Under **Import a Product**, click **+** next to the version number of <%= vars.product_abbr %>.
This adds the tile to your staging area.

1. Click the newly added **<%= vars.product_abbr %>** tile.

## <a id='configure-ubuntu'></a> Configure <%= vars.product_abbr %> for Linux

To configure <%= vars.product_abbr %> for Linux VMs:

1. Select **FIM Configuration for Ubuntu**.
<%# screenshot needed %>

1. Configure the following fields:

    <table class="nice">
      <th>Field</th>
      <th>Description</th>
      <tr>
        <td><strong>Watchlist</strong></td>
        <td>
          Enter a <%# comma-delimited? %> list of file paths to monitor for file system events.<br><br>
          For more information, see <a href="#dirs">Watchlist</a>.
          <p class="note"><strong>Note: </strong>
            This field corresponds to <code>fim.dirs</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Ignore patterns</strong></td>
        <td>
          Using golang-flavored path regular expressions, enter a list of files that you want
          <%= vars.product_abbr %> to ignore.
          To test whether a regular expression is valid, you can use <a href="https://regex101.com?flavor=golang">Regex101</a>.
          Events for files matching any of the provided regular expressions are
          not included in the logs.<br><br>
          For more information, see <a href="#output-ignore">Ignore Patterns</a>.
          <p class="note"><strong>Note: </strong>
            This field corresponds to <code>fim.ignored_patterns</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Low severity tagging for frequently changed files</strong></td>
        <td>
          Using golang-flavored path regular expressions, enter a list of files to be marked as low severity.
          To test whether a regular expression is valid, you can use <a href="https://regex101.com?flavor=golang">Regex101</a>.<br><br>
          For more information, see <a href="#output-low">Low Severity Events</a>.
          <p class="note"><strong>Note: </strong>
            This field corresponds to <code>fim.low_severity_patterns</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Output log format</strong></td>
        <td>
          Enter a template for log lines.
          This template must be compatible with the golang package <code>text/template</code>.<br><br>
          For more information about the <strong>Output log format</strong> field,
          see <a href="#format">Output Log Format</a>.
          <p class="note"><strong>Note: </strong>
            This field corresponds to <code>fim.format</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Heartbeat interval (in seconds)</strong></td>
        <td>
          Set the heartbeat interval as follows:
          <ul>
            <li>
              To enable the heartbeat interval, set the value to an integer greater than <code>0</code> .
              If you set a negative value, an error occurs.
            </li>
            <li>To disable the heartbeat interval, set the value to <code>0</code>.</li>
          </ul>
          The default value is <code>600</code>.
          <p class="note"><strong>Note: </strong>
            This field corresponds to <code>fim.heartbeat_interval</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Max memory usage (in bytes)</strong></td>
        <td>
          Set a limit in bytes for the maximum amount of memory, including file cache,
          that <%= vars.product_abbr %> can use per VM.
          The default value is <code>536870912</code> (512&nbsp;MB).
          <p class="note"><strong>Note</strong>:
            This field corresponds with <code>fim.memory_limit</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>CPU limit (percentage)</strong></td>
        <td>
          Set the percentage of CPU that the <%= vars.product_abbr %> process can use.
          Integers from <code>1</code> to <code>100</code> are valid.
          The limit is set per core.
          Setting this field to <code>100</code> permits the use of one full core.
          The default value is <code>10</code>.
          <p class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.cpu_limit</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Enforce CPU limit</strong></td>
        <td>Select the enforcement policy for the <strong>CPU limit</strong>:
          <ul>
            <li><strong>Always</strong>: Ensures the <strong>CPU limit</strong> is always enforced</li>
            <li><strong>When other processes are using CPU resources</strong>: Permits the CPU usage to
              exceed the limit set by <strong>CPU limit</strong> if idle CPU cycles are available</li>
          </ul>

          The default setting is <strong>When other processes are using CPU resources</strong>.

          <p class="note warning"><strong>Warning: </strong>
            If <strong>Enforce CPU limit</strong> is set <strong>Always</strong>,
            verify that the <strong>CPU limit</strong> is set high enough for <%= vars.product_abbr %> to
            execute correctly.
            If the limit is too strict, <%= vars.product_abbr %> fails to start.
          </p>
          <div class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.enforce_cpu_limit</code> in <%= vars.product_abbr %> v1.4 and earlier.
            <ul>
              <li><strong>Always</strong> is equivalent to <code>fim.enforce_cpu_limit == true</code></li>
              <li><strong>When other processes are using CPU resources</strong> is equivalent to <code>fim.enforce_cpu_limit == false</code></li>
            </ul>
          </div>
        </td>
      </tr>
      <tr>
        <td><strong>Log file digest for write/create events</strong></td>
        <td>
          Choose whether to enable computing digests for write/create events using
          the <strong>Enable</strong> or <strong>Disable</strong> radio buttons.
          If you enable digests, a field for
          <strong>A threshold of file size beyond which digests are not calculated (in bytes)</strong>
          appears after you select the option.<br><br>
          For more information, see <a href="#digests">Calculate File Hashes</a>.
          <p class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.digests</code> in
            <%= vars.product_abbr %> v1.4 and earlier.
            Setting <strong>Log file digest for write/create events</strong> to <strong>Enable</strong>
            is equivalent to <code>fim.digests == [sha256]</code>.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>A threshold of file size beyond which digests are not calculated (in bytes)</strong></td>
        <td>
          Enter a positive value for the threshold for the maximum size of files
          for <%= vars.product_abbr %> to hash.
          This field only appears if you have selected <strong>Enable</strong> for <strong>Log file digest for write/create events</strong>.
          The default value is <code>10000000</code>.<br><br>
          For more information, see <a href="#digest_threshold">File Size Threshold</a>.
          <p class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.digest_threshold</code> in
            <%= vars.product_abbr %> v1.4 and earlier.<br>
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>List of instance group names that will be excluded from deployment</strong></td>
        <td>
          Enter a comma-separated list of instance groups that you do not want
          <%= vars.product_abbr %> deployed on.
        </td>
      </tr>
    </table>

1. Click **Save**.

## <a id='configure-windows'></a> Configure <%= vars.product_abbr %> for Windows (Beta)

<p class="note warning"><strong>Warning: </strong>
  <%= vars.product_abbr %> for Windows is currently in beta.
  To disable installing <%= vars.product_abbr %> on Windows VMs, follow the steps in
  <a href="#disable-windows">Disable Windows</a> below.
</p>

To configure <%= vars.product_abbr %> for Windows VMs:

1. Select **FIM Configuration for Windows (Beta)**.
<%# screenshot needed %>

1. Configure the following fields:

    <table class="nice">
      <th>Field</th>
      <th>Description</th>
      <tr>
        <td><strong>Watchlist</strong></td>
        <td>
          Enter a list of file paths to monitor for file system events.<br><br>
          For more information, see <a href="#dirs">Watchlist</a> below.
          <p class="note"><strong>Note:</strong>
            This field corresponds to <code>fim.dirs</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Container Watchlist</strong></td>
        <td>
          Enter a list of file paths to monitor for file system events per container on
          the Windows Diego Cell. For example, to monitor file system events for app files,
          enter <code>C:\Users\vcap\app</code>. <br><br>

          If you do not enter a file path,
          <%= vars.product_abbr %> does not monitor any file system events for containers.

          <p class="note"><strong>Note:</strong>
            The file path for generated logs from container events is relative to
            the file system for the Diego Cell, rather than the container. <br><br>
            For example, a container event for the container file path
            <code>C:\Users\vcap\app\test.html</code> appears as a file system event in
            <code>C:\proc\PID\root\Users\vcap\app\test.html</code>,
            where PID is the process ID of the container.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Ignore patterns</strong></td>
        <td>
          Using golang-flavored path regular expressions, enter a list of files that you want
          <%= vars.product_abbr %> to ignore.
          When defining <strong>Ignore patterns</strong> for Windows, you must replace all
          single back slashes with double back slashes.
          To test whether a regular expression is valid, you can use <a href="https://regex101.com?flavor=golang">Regex101</a>.
          Events for files matching any of the provided regular expressions are
          not included in the logs.<br><br>
          For more information, see <a href="#output-ignore">Ignore Patterns</a>.
          <p class="note"><strong>Note: </strong>
            To ignore events for files in containers, you must enter regular expressions that are
            relative to the file system for the Diego Cell, rather than the container.
            To do this, enter regular expressions that start with <code>^C:\\proc\\[^\\]+\\root</code>.<br><br>

            For example, to ignore all files in containers in the directory <code>C:\Users\vcap\app</code>,
            enter <code>^C:\\proc\\[^\\]+\\root\\Users\\vcap\\app\\.*$</code>.
          </p>
          <p class="note"><strong>Note: </strong>
            This field corresponds to <code>fim.ignored_patterns</code> in
            <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Low severity tagging for frequently changed files</strong></td>
        <td>
          Using golang-flavored path regular expressions, enter a list of files to be marked as low severity.
          When defining <strong>Low severity tagging for frequently changed files</strong> for Windows, you must
          replace all single back slashes with double back slashes.
          To test whether a regular expression is valid, you can use <a href="https://regex101.com?flavor=golang">Regex101</a>.<br><br>
          For more information, see <a href="#output-low">Low Severity Events</a>.
          <p class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.low_severity_patterns</code> in
            <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Output log format</strong></td>
        <td>
          Enter a template for log lines.
          This template must be compatible with the golang package <code>text/template</code>.<br><br>
          For more information, see <a href="#format">Output Log Format</a>.
          <p class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.format</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Heartbeat interval (in seconds)</strong></td>
        <td>
          Set the heartbeat interval as follows:
          <ul>
            <li>
              To enable the heartbeat interval, set the value to an integer greater than <code>0</code> .
              If you set a negative value, an error occurs.
            </li>
            <li>To disable the heartbeat interval, set the value to <code>0</code>.</li>
          </ul>
          The default value is <code>600</code>.
          <p class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.heartbeat_interval</code> in <%= vars.product_abbr %> v1.4 and earlier.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>Log file digest for write/create events</strong></td>
        <td>
          Choose whether to enable computing digests for write/create events using
          the <strong>Enable</strong> or <strong>Disable</strong> radio buttons.
          If you enable digests, a field for
          <strong>A threshold of file size beyond which digests are not calculated (in bytes)</strong>
          appears after you select the option.<br><br>
          For more information, see <a href="#digests">Calculate File Hashes</a>.
          <p class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.digests</code> in
            <%= vars.product_abbr %> v1.4 and earlier.
            Setting <strong>Log file digest for write/create events</strong> to <strong>Enable</strong>
            is equivalent to <code>fim.digests == [sha256]</code>.
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>A threshold of file size beyond which digests are not calculated (in bytes)</strong></td>
        <td>
          Enter a positive value for the threshold for the maximum size of files
          for <%= vars.product_abbr %> to hash.
          This field only appears if you have selected <strong>Enable</strong> for <strong>Log file digest for write/create events</strong>.
          The default value is <code>10000000</code>.<br><br>
          For more information, see <a href="#digest_threshold">File Size Threshold</a>.
          <p class="note"><strong>Note</strong>:
            This field corresponds to <code>fim.digest_threshold</code> in
            <%= vars.product_abbr %> v1.4 and earlier.<br>
          </p>
        </td>
      </tr>
      <tr>
        <td><strong>List of instance group names that will be excluded from deployment</strong></td>
        <td>
          Enter a comma-separated list of instance groups that you do not want
          <%= vars.product_abbr %> deployed on.
        </td>
      </tr>
    </table>

1. Click **Save**.


###<a id="disable-windows"></a> Disable Windows

To disable installing <%= vars.product_abbr %> on Windows VMs:

1. In the <%= vars.product_abbr %> tile, select **<%= vars.product_abbr %> Configuration for Windows (Beta)**. <%# unsure %>

1. Add the instance group **windows\_diego\_cell** to the field
**List of instance group names that will be excluded from deployment**.

1. Click **Save**.

##<a id="monitor-containers"></a>Monitor Containers with <%= vars.product_abbr %>

You can use <%= vars.product_abbr %> to monitor:

* Garden containers on the Diego Cell VMs in <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>)
* Containers on the Diego Windows Cell VMs in <%= vars.windows_runtime_full %> (<%= vars.windows_runtime_abbr %>)
* Containers on the Kubernetes worker node VMs in <%= vars.k8s_runtime_full %> (<%= vars.k8s_runtime_abbr %>)

For an example log message, see [Examples of Log Messages from Containers](./log-examples.html#container-examples).


###<a id="garden"></a> Monitor Garden Containers

To configure <%= vars.product_abbr %> to monitor Garden containers:

1. In the <%= vars.product_abbr %> tile, select **<%= vars.product_abbr %> Configuration for Ubuntu**.

1. Add the following directories to the **Watchlist** field:

    ```
    # Garden containers
    - /var/vcap/data/grootfs/store/unprivileged/images/
    - /var/vcap/data/grootfs/store/privileged/images/
    ```
    For more information about GrootFS volumes,
    see [Volumes](https://docs.pivotal.io/pivotalcf/concepts/grootfs-disk.html#volumes).

2. Add the following pattern to the **Ignore patterns** field:

    ```
    # When monitoring Garden containers,
    # ignore duplicate log messages sent to .../UUID/rootfs/
    - ^/var/vcap/data/grootfs/store/(un)?privileged/images/[\w-]+/rootfs/.*$
    ```

    <p class="note"><strong>Note:</strong>
      When files in the Garden containers are modified, changes are made to both
      the <code>diff</code> and <code>rootfs</code> directories.
      Adding this ignore pattern means that files and directories
      in the <code>/var/vcap/data/grootfs/store/unprivileged/images/UUID/diff</code>
      directory are ignored by <%= vars.product_abbr %>. <code>UUID</code> is the ID of the container.
    </p>

1. Click **Save**.

###<a id="garden-windows"></a> Monitor Windows Garden Containers

To configure <%= vars.product_abbr %> to monitor Windows Garden containers:

1. In the <%= vars.product_abbr %> tile, select **<%= vars.product_abbr %> Configuration for Windows (beta)**.

1. Add at least one directory to the **Container Watchlist** field.
Pivotal recommends that you add the following:

    ```
    # Application files
    - C:\Users\vcap\app
    ```

1. Click **Save**.

###<a id="pks"></a> Monitor Containers in <%= vars.k8s_runtime %>

To configure <%= vars.product_abbr %> to monitor containers on the Kubernetes worker node VMs in <%= vars.k8s_runtime %>:

1. In the <%= vars.product_abbr %> tile, select **<%= vars.product_abbr %> Configuration for Ubuntu**.

1. Add the following directory to the **Watchlist** field:

    ```
    # Containers in PKS
    - /var/vcap/store/docker/docker/
    ```
When files and directories in the `/var/vcap/store/docker/docker/overlay2/UUID/diff` directory
are created, removed, or modified, <%= vars.product_abbr %> writes log messages.
`UUID` is the ID of the container.

1. Click **Save**.


##<a id="alerts"></a> Configure Forwarding for <%= vars.product_abbr %> Alerts

<%= vars.product_abbr %> writes all alerts to the BOSH logs for the VMs in your deployment.
These logs are located at `/var/vcap/sys/log/fim/fim.stdout.log` and
`C:\var\vcap\sys\log\fim-windows\filesnitch\job-service-wrapper.out.log`.

You can use syslog forwarding to forward the alerts to a syslog aggregator.

* **Using the <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) tile**:
Follow the steps to configure system logging in <%= vars.app_runtime_abbr %> in [Configuring Logging in <%= vars.app_runtime_abbr %>](https://docs.pivotal.io/pivotalcf/2-4/opsguide/logging-config-opsman.html).
The syslog aggregator that you specify receives all alerts generated on <%= vars.app_runtime_abbr %> VMs, including the <%= vars.product_abbr %> alerts.

* **Using the syslog BOSH release**: You can use the syslog BOSH release to forward system logs.
See [syslog-release](https://github.com/cloudfoundry/syslog-release) in GitHub for instructions.

<p class="note"><strong>Note:</strong>
  When you configure syslog forwarding, ensure there is enough disk space for the logs.
  Ensure that the log rotation is frequent enough.
  If in doubt, rotate the logs hourly or when they reach a certain size.
  Pivotal recommends forwarding logs to a remote syslog aggregation system.
</p>

##<a id="deploy"></a> Apply Changes from Your Configuration

Your installation is not complete until you apply your configuration changes:

1. Navigate to the **Installation Dashboard** in <%= vars.ops_manager %>.

1. Click **Review Pending Changes**.

<%# do you need to ensure that all products are selected before applying changes? %>
1. Click **Apply Changes** to complete the <%= vars.product_abbr %> installation.


## <a id="verify"></a>Verify the Installation

To verify the installation for Linux:

1. `bosh ssh` into the VMs in your deployment. For more information, see
[BOSH SSH](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#bosh-ssh).

1. Enter this command:

    ```
    touch /bin/hackertool
    ```

1. Enter this command:

    ```
    grep hackertool /var/vcap/sys/log/fim/fim.stdout.log
    ```

1. Verify in the logs that a new file has been created. For example:
<pre class="terminal">
CEF:0|cloud\_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/bin/hackertool" hostname="fim_1/3ad6ff1f-37e0-4b8a-80bd-d16b7f79c149" opname="CREATE" optype=1 ts=1574098829 severity=5
</pre>

<br>
To verify the installation for Windows:

1. `bosh ssh` into the VMs in your deployment. For more information, see
[BOSH SSH](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#bosh-ssh).

1. Enter this command:

    ```
    powershell New-Item -type File /var/vcap/data/jobs/sample_file
    ```

1. Enter this command:

    ```
    powershell "Get-Content C:\var\vcap\sys\log\fim-windows\filesnitch\job-service-wrapper.out.log | Select-String sample_file"
    ```

1. Verify in the logs that a new file has been created. For example:
<pre class="terminal">
CEF:0|cloud\_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="C:\\var\\vcap\\data\\jobs\\sample\_file" hostname="no-job_1/ebee34c1-3300-4f5d-9557-bbef845d608c" opname="CREATE" optype=1 ts=1569953512 severity=5
</pre>


##<a id="dirs"></a> Watchlist

<%= vars.product_abbr %> monitors a set of critical system directories.

<%# Is their information is already within the fields %>

###<a name="linux-dirs"></a> Watchlist for Linux

The default value of **Watchlist** for Linux is:

```
# System binaries and configuration
- /bin
- /etc
- /lib
- /lib32
- /lib64
- /opt
- /sbin
- /srv
- /usr
- /var/lib

# BOSH agent
- /var/vcap/bosh
- /var/vcap/monit/job

# BOSH releases
- /var/vcap/data/packages
- /var/vcap/data/jobs
```

###<a name="windows-dirs"></a> Watchlist for Windows

The default value of **Watchlist** for Windows is:

```
- C:\Windows\System32
- C:\Program Files
- C:\Program Files (x86)
- C:\var\vcap\bosh
- C:\var\vcap\data\packages
- C:\var\vcap\data\jobs
```

##<a id="output-logs"></a>Event Logging

<%= vars.product_abbr %> logs events that occur.
You can use these samples to configure a Security Information and Event Management (SIEM)
system, to verify regular activity and generate alerts for unauthorized changes to a file.

These logs appear in the following format:

```
CEF:0|cloud_foundry|fim|1.0.0|OPERATION-TYPE|file integrity monitoring event|SEVERITY| fname="ABSOLUTE-PATH" hostname="BOSH-VM" opname="OPERATION-NAME" optype=OPERATION-TYPE ts=TIMESTAMP severity=SEVERITY
```

Where:

* `OPERATION-TYPE` and `OPERATION-NAME` are one of the below:
    * `1`, which is `CREATE`
    * `2`, which is `WRITE`
    * `4`, which is `REMOVE`
    * `8`, which is `RENAME`
    * `16`, which is `CHMOD`

* `SEVERITY` is one of the following severity levels:
    * `0`, which is used for heartbeats
    * `3`, which is used for low severity events
    * `5`, which is used for all other events

* `ABSOLUTE-PATH` is the absolute path to the file, for example `/directory/file`

* `BOSH-VM` is the BOSH VM name, for example `/directory/vm-name`

* `TIMESTAMP` is the timestamp in Unix epoch format.

For example:
<pre class="terminal">
CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|3| fname="/test/file01" hostname="fim/a6fbc720-cfd1-47fc-a257-c211704924a6" opname="CREATE" optype=1 ts=1546535400 severity=3

CEF:0|cloud_foundry|fim|1.0.0|2|file integrity monitoring event|5| fname="/test/file02" hostname="fim/a6fbc720-cfd1-47fc-a257-c211704924a6" opname="WRITE" optype=2 ts=1546535520 severity=5
</pre>

For an example of every type of <%= vars.product_abbr %> log message that can be configured, see [Examples of <%= vars.product_abbr %> Log Messages](./log-examples.html).

<p class="note"><strong>Note</strong>:
Low severity events can be used to filter out business-as-usual events.
This allows you to isolate unexpected events by looking for severity <code>5</code>.
</p>

##<a id="output-ignore"></a>Ignore Patterns

Some monitored directories might contain files that you do not want
<%= vars.product_abbr %> to monitor, such as files that change frequently.
You can configure <%= vars.product_abbr %> to ignore these events using path regular
expressions in the **Ignore patterns** field.


###<a name="linux-ignore"></a> Ignore Patterns for Linux

The default values for **Ignore patterns** for Linux are:

```
# Temporary files created when an operator or errand invoke `bosh ssh`
- ^/etc/passwd.+$
- ^/etc/shadow.+$
- ^/etc/subgid.+$
- ^/etc/subuid.+$
- ^/etc/group.+$
- ^/etc/gshadow.+$

# Temporary files created when hosts updated
- ^/etc/hosts.+$

# BOSH Agent logs
- ^/var/vcap/bosh/log/.+$

# Log rotation
- ^/var/lib/logrotate/status.*$

# Monit state
- ^/root/\.monit\.state$
```

###<a name="windows-ignore"></a> Ignore Patterns for Windows

<p class="note"><strong>Note</strong>:
There is currently no default value for <strong>Ignored patterns</strong> for Windows.
</p>

When defining **Ignore patterns** for Windows, you must replace all single
back slashes with double back slashes.
For example, to ignore all files in the directory `C:\var\vcap\bosh\ignore_me\`, use:

```
^C:\\var\\vcap\\bosh\\ignore_me\\.*$
```


##<a id="output-low"></a>Low Severity Events

Some monitored directories might contain files that only change occasionally
or files that update frequently but are low impact.
You can configure <%= vars.product_abbr %> to log events at a lower severity using
path regular expressions in the **Low severity tagging for frequently changed
files** field.
<%# is this for files that don't change that often? %>

Events for files matching any of the provided regular expressions
are logged with severity <code>3</code>, instead of the default value of <code>5</code>.
This can be useful to filter out business-as-usual events.

###<a name="linux-output-low"></a> Low Severity Tagging for Frequently Changed Files for Linux

The default values for **Low severity tagging for frequently changed files** for Linux are:

<%# Should this all be in a giant code snippet? %>

```
# When an operator or errand invokes `bosh ssh` a new user is created
- ^/etc/passwd$
- ^/etc/shadow$
- ^/etc/subgid$
- ^/etc/subuid$
- ^/etc/group$
- ^/etc/gshadow$

# BOSH-DNS sync and new VM creation update hosts
- ^/etc/hosts$

# Attached devices and cgroups
- ^/etc/mtab$

# DHCP leases
- ^/var/lib/dhcp/dhclient.eth\d+.leases$

# BOSH Agent configuration changes when VM created/modified
- ^/var/vcap/bosh/settings.json$

# BOSH Agent CHMODs jobs and packages as part of `bosh deployment`
- ^/var/vcap/data/jobs$
- ^/var/vcap/data/packages$
```

###<a name="windows-output-low"></a> Low Severity Tagging for Frequently Changed Files for Windows

<p class="note"><strong>Note: </strong>
There is currently no default value for <strong>Low severity tagging for frequently changed files</strong> for Windows.
</p>

When defining **Low severity tagging for frequently changed files** for Windows, you must replace all single
back slashes with double back slashes.
For example, to mark all files in the directory `C:\var\vcap\bosh\ignore_me\` as low severity, use:

```
^C:\\var\\vcap\\bosh\\ignore_me\\.*$
```

##<a id="format"></a>Output Log Format

By default, <%= vars.product_abbr %> generates messages in the Common Event Format.
You can configure the output format as a golang text template using the **Output log format** field.

The default value of **Output log format** is:

```
"CEF:0|cloud_foundry|fim|1.0.0|{{.Optype}}|file integrity monitoring event|{{.Severity}}| {{.KeyValues}}"
```

This example output shows what log lines look like with the default **Output log format** configuration:

```
CEF:0|cloud_foundry|fim|1.0.0|0|file integrity monitoring event|0| fname="" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="FILESNITCH_CHECKIN" optype=0 ts=1492715822 severity=0
CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/etc/passwd.lock" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="CREATE" optype=1 ts=1492715822 severity=5
CEF:0|cloud_foundry|fim|1.0.0|4|file integrity monitoring event|5| fname="/etc/passwd.17721" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="REMOVE" optype=4 ts=1492715822 severity=5
CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/etc/group.lock" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="CREATE" optype=1 ts=1492715822 severity=5
CEF:0|cloud_foundry|fim|1.0.0|4|file integrity monitoring event|5| fname="/etc/group.17721" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="REMOVE" optype=4 ts=1492715822 severity=5
CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/etc/gshadow.lock" hostname="diego_cell/8279dfa8-9f86-4bb1-8b92-65457d2ae989" opname="CREATE" optype=1 ts=1492715822 severity=5
```

<p class="note"><strong>Note</strong>:
  The <code>FILESNITCH CHECKIN</code> message is a logging marker that indicates
  <code>filesnitch</code> is operational in the absence of any file system events.
</p>

The key-values pairs in the final field of a CEF file log carry the following meaning:

* `fname` is the name of the affected file.
* `hostname` is the hostname of the VM on which the file event originated.
* `ts` is the point in time at which <%= vars.product_abbr %> received the file event.
* `optype` and `opname` are the type of file operation in the numeric and textual format, respectively.
   The possible values of the two fields are described in the table below:

    <table class="nice">
        <th width="5%">opname</th>
        <th width="5%">optype</th>
        <th width="45%">Example Linux Trigger</th>
        <th width="45%">Example Windows Trigger</th>
        <tr>
            <td>CREATE</td>
            <td align="center">1</td>
            <td>
              <code>touch newfile.txt</code>
              <br>
              <br>
              <code>echo 'content' > newfile2.txt</code>
            </td>
            <td>
              <code>Powershell New-Item -type File newfile.txt</code>
              <br>
              <br>
              <code>Powershell Add-Content -Path newfile.txt -Value 'content'</code>
            </td>
        </tr>
        <tr>
            <td>WRITE</td>
            <td align="center">2</td>
            <td>
              <code>echo 'hello world' >> file.txt</code>
            </td>
            <td>
              <code>Powershell Add-Content -Path newfile.txt -Value 'content'</code>
            </td>
        </tr>
        <tr>
            <td>REMOVE</td>
            <td align="center">4</td>
            <td>
              <code>rm file.txt</code>
            </td>
            <td>
              <code>Powershell rm file.txt</code>
            </td>
        </tr>
        <tr>
            <td>RENAME</td>
            <td align="center">8</td>
            <td>
              <code>mv file.txt file.txt.orig</code>
            </td>
            <td>
              <code>Powershell mv file.txt file.txt.orig</code>
            </td>
        </tr>
        <tr>
            <td>CHMOD</td>
            <td align="center">16</td>
            <td>
              <code>chmod 0400 file.txt</code>
              <br>
              <br>
              <code>touch existingfile.txt</code>
            </td>
            <td>
              <code>Powershell icacls file.txt /grant administrators:F</code>
            </td>
        </tr>
    </table>


<p class="note"><strong>Note: </strong>
  <%= vars.product_abbr %> on Windows reports <code>WRITE</code> and <code>CHMOD</code>
  together as <code>WRITE|CHMOD</code>. The two operations are indistinguishable.
</p>

Other template values are listed below.

###<a id="json"></a>JSON
The `{{.Json}}` string serializes an event into a standard JSON dictionary.
Example:

```json
{"fname":"/bin/binary","hostname":"plymouth","opname":"CREATE","optype":1,"ts":1475195084}
```

###<a id="keyvalues"></a>Key-Values
The `{{.KeyValues}}` string serializes an event into a series of `key=value` fields.
Example:

```
fname="/bin/binary" hostname="plymouth" opname="CREATE" optype=1 ts=1475195258
```

###<a id="fields"></a>Individual Fields
| Template | Description |
|----------|-------------|
| `{{.Fname}}` | Name of the affected file |
| `{{.Hostname}}` | Hostname of the VM on which the file event originated |
| `{{.OpName}}` | Type of file operation in textual format |
| `{{.OpType}}` | Type of file operation in numeric format |
| `{{.Severity}}` | Level of importance attributed to the event |
| `{{.Ts}}` | Point in time at which <%= vars.product_abbr %> received the file event |
| `{{.Digests}}` | Key-value pairs of hash algorithms and the hash of the modified file |

For example, the following variable definition...

```
format: "{{.Fname}} {{.Hostname}} {{.OpName}} {{.OpType}} {{.Digests}} {{.Ts}}"
```

...produces this:

```
/bin/binary plymouth CREATE 1 sha256=da39a3ee5e6b4b0d3255bfef95601890afd80709 1475195574
```

##<a id="digests"></a>Calculate File Hashes

<%= vars.product_abbr %> supports hashing monitored files on WRITE or CREATE events
using the `sha256` algorithm.
Hashing is disabled by default.


##<a id="digest_threshold"></a>File Size Threshold

<%= vars.product_abbr %> sets a threshold on the size of files, in bytes, to be hashed.
The default value is `10000000` bytes.
