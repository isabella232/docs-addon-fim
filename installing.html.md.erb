---
title: Installing the FIM Add-on for PCF
owner: Security Engineering
---

<strong><%= modified_date %></strong>

This topic describes how to install File Integrity Monitoring Add-on for PCF (FIM Add-on) on your Pivotal Cloud Foundry (PCF) deployment.

##<a id="prereqs"></a>Prerequisites

<p class="note"><strong>Note</strong>: FIM Add-on for PCF does not work on Windows.</p>

To complete the FIM installation:

* You must use named runtime configs (for PCF v1.11 or later).

    If you have not already split your runtime config into multiple named files,
    do so before installing or upgrading the FIM Add-on for PCF.
    For general information about named runtime config files,
    see <a href="https://bosh.io/docs/configs.html">Configs</a>.

* You must be a PCF operator with admin rights. 
See the [Understanding Pivotal Cloud Foundry User Types](https://docs.pivotal.io/pivotalcf/customizing/user-types.html#operator) topic for more information.

* You must have Pivotal Operations Manager (Ops Manager) v1.7 or later.

##<a id="create-mfest"></a>Create the FIM Manifest

The FIM runtime config is a YML file that contains runtime configuration information for the FIM Add-on.
Follow the steps below to create the FIM runtime config for your deployment:

1. Create a file named `fim.yml`, using the following code as a template.
  <pre>releases:
  \- name: fim
      version: 1.0.0
  addons:
  \- name: fim
      jobs:
      \- name: fim
        release: fim
      properties: {}

##<a id="download"></a>Download the FIM Add-on  

<p class="note warning"><strong>WARNING! </strong> If you are using PCF v1.11 or later,
   ensure that you are using named runtime configs.
   For more information, see <a href="#prereqs">Prerequisites</a>.</p>

1. Download the FIM Add-on software binary from the [Pivotal Network](https://network.pivotal.io/products/p-fim-addon) to your local machine.

2. Copy the software binary to your Ops Manager VM.
  <pre class="terminal">$ scp -i PATH/TO/PRIVATE/KEY fim-release.tgz ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

3. Copy the FIM runtime config, `fim.yml` file, to your Ops Manager instance.
  <pre class="terminal">$ scp -i PATH/TO/PRIVATE/KEY fim.yml ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

4. SSH into Ops Manager.
  <pre class="terminal">$ ssh -i PATH-TO-PRIVATE-KEY ubuntu@YOUR-OPS-MANAGER-VM-IP</pre>

5. On the Ops Manager VM, navigate to the software binary location.
  <pre class="terminal">$ cd PATH-TO-BINARY</pre>

##<a id="deploy"></a> Deploy the FIM Add-on

Perform the following steps to deploy the FIM Add-on:

1. Upload your release, specifying the path to the tarballed FIM binary, by running one of the following commands:
    <br><br>
    **For Ops Manager 1.10 or earlier:**
    <pre class="terminal">$ bosh upload release PATH-TO-BINARY/BINARY-NAME.tgz</pre>
    <br>
    **For Ops Manager 1.11 or later:**
    <pre class="terminal">$ bosh2 -e my-env upload-release fim.tgz</pre>
    <br>
1. <a name="update"></a>Update your runtime config to include the FIM Add-on, specifying the path to the `fim.yml` file you created above, by running one of the following commands:
   <br><br>
    **For Ops Manager 1.10 or earlier:**
    
    <pre class="terminal">$ bosh update runtime-config PATH/YOUR-ADD-ON-YML.yml</pre>
    <br>
    **For Ops Manager 1.11 or later:**
    <pre class="terminal">$ bosh2 -e my-env update-runtime-config --name=fim fim.yml</pre>
    <p class="note"><strong>Note</strong>: If you installed other BOSH add-ons,
    you must merge the FIM runtime config into your existing add-on runtime config. 
    Append the contents of `fim.yml` to your existing add-on YML file.</p>
    <br>
1. Verify that your runtime config changes match what you specified in the FIM runtime config by running one of the following commands:
    <br><br>
    **For Ops Manager 1.10 or earlier:**
    <pre class="terminal">$ bosh runtime-config</pre>
    <br>
    **For Ops Manager 1.11 or later:**
    <pre class="terminal">$ bosh2 -e my-env runtime-config --name=fim</pre>

    For Example:
    <pre class="terminal">
    $ bosh2 -e my-env runtime-config --name=fim
    Acting as user 'admin' on 'micro'
    releases:
    <span>-</span> name: fim
       version: 1.0.0
    <br>
    addons:
      name: fim
        jobs:
         <span>-</span> name: fim
            release: fim
    ...
    </pre>
<br>
1. Navigate to your Installation Dashboard in Ops Manager.

1. Click **Apply Changes**.

##<a id="alerts"></a> Configure Forwarding for FIM Alerts

<p class="note"><strong>Note:</strong> As of PCF v2.0, Elastic Runtime is renamed Pivotal Application Service (PAS). The following procedure uses both names.</p>

The FIM BOSH release writes all alerts to the syslogs of the VMs in your deployment.
You can use syslog forwarding to forward the alerts to a syslog aggregator.

* **Using the Pivotal Application Service (PAS) or Elastic Runtime tile**: Follow the steps to [Configure System Logging](http://docs.pivotal.io/pivotalcf/customizing/cloudform-er-config.html#sys-logging) 
in the PAS or Elastic Runtime tile. 
The syslog aggregator that you specify receives all alerts generated on PAS or Elastic Runtime VMs, including the FIM alerts.
* **Using the BOSH syslog release**: You can use the syslog BOSH release to forward system logs. 
See the [syslog-release](https://github.com/cloudfoundry/syslog-release) for instructions.

<p class="note"><strong>Note</strong>: When you configure syslog forwarding, ensure enough disk space for the logs. 
Make sure that log rotation is frequent enough. If in doubt, rotate the logs hourly or when they reach a certain size. 
Pivotal recommends forwarding logs to a remote syslog aggregation system.</p>

## <a id="verify"></a>Verify the Installation

1. [BOSH ssh](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#bosh-ssh) into one of the VMs in your deployment.

1. Run `monit summary`. Look for the following processes in the output:

    <pre class="terminal">The Monit daemon 5.2.4 uptime: 3d 0h 56m
    Process 'fim'                 running</pre>

1. If `monit summary` does not list `fim`, perform the following steps:
  1. Start the FIM processes by running the following commands:
  <pre class="terminal">
  $ monit start fim
  </pre>
  1. Run `monit summary` again. If you do not see the processes mentioned above, check `/var/vcap/sys/log/fim` logs for errors.

1. If `monit summary` does list `fim`, do the following:
  1. Enter the following commands:
    <pre class="terminal">$ touch /bin/hackertool
    $ grep hackertool /var/log/messages</pre>
  1. Look for a message that a new file has been created:
    <pre class="terminal">Sep 22 23:57:07 qvsfgv0qnrk filesnitch[3040]: CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/bin/hackertool" hostname="f98968fe-501a-470b-819a-c4a2a7ac45c8" opname="CREATE" optype=1 ts=1474588627</pre>


