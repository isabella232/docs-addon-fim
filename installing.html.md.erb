---
title: Installing the FIM Add-on for PCF
owner: Security Engineering
---

<strong><%= modified_date %></strong>

This topic describes how to install File Integrity Monitoring Add-on for PCF
(FIM Add-on) on your Pivotal Cloud Foundry (PCF) deployment.

##<a id="prereqs"></a>Prerequisites

<p class="note"><strong>Note</strong>: FIM Add-on does not work on Windows.</p>

To complete the FIM installation:

* You must be a PCF operator with admin rights.
See [Operators](https://docs.pivotal.io/pivotalcf/customizing/user-types.html#operator)
in the Pivotal Cloud Foundry documentation.

* You must have Ops Manager v2.0 or later.

##<a id="create-mfest"></a>Create the FIM Manifest

The FIM runtime configuration file is a YAML file that contains runtime configuration
information for the FIM Add-on.
Follow the steps below to create the FIM runtime configuration for your deployment:

1. Create a file named `fim.yml`, using the following code as a template.

    ```
    releases:
    - name: fim
      version: X.X.X
    addons:
    - name: fim-trusty
      jobs:
      - name: fim
        release: fim
        properties: {}
      include:
        stemcell:
        - os: ubuntu-trusty
    - name: fim-xenial
      jobs:
      - name: fim
        release: fim
        properties:
          fim:
            dirs:
              # System binaries and configuration
              - /bin
              - /etc
              - /lib
              - /lib32 # xenial-specific
              - /lib64
              - /opt
              - /sbin
              - /srv
              - /usr
              - /var/lib

              # Bosh agent
              - /var/vcap/bosh
              - /var/vcap/monit/job

              # Bosh releases
              - /var/vcap/data/packages
              - /var/vcap/data/jobs
      include:
        stemcell:
        - os: ubuntu-xenial
    ```

2. (Optional) Set the properties `cpu_limit`, `enforce_cpu_limit`, `memory_limit`, and  `heartbeat_interval`.
To use these properties, place the following text under the `fim` subsection of
`fim.yml`, as shown below:

    ```
    ...
    properties:
      fim:
        cpu_limit: VALUE-OF-CPU-LIMIT
        enforce_cpu_limit: TRUE|FALSE
        memory_limit: VALUE-OF-MEMORY-LIMIT-IN-BYTES
        heartbeat_interval: VALUE-OF-HEARTBEAT-INTERVAL
    ...
    ```
  <code><strong>cpu\_limit</strong></code>: <a name="cpu_limit"></a>
    <ul>
      <li>Limits FIM to a percentage of available CPU resources when other processes are using CPU resources.
        Usage can exceed the limit if enough idle CPU cycles are available.</li>
      <li>Must be set to a whole number less than 100.
        For example, set it to <code>50</code> to limit FIM to 50% CPU usage when other
        tasks are running.</li>
        <li>The default value is <code>10</code>.</li>
    </ul>

    <code><strong>enforce\_cpu\_limit</strong></code>: <a name="enforce_cpu_limit"></a>
    <ul>
      <li>When <code>true</code>, the limit set by <code>cpu\_limit</code> is always enforced.</li>
      <li>When <code>false</code>, the limit set by <code>cpu\_limit</code> is
        only enforced when other processes are using CPU resources.
        Usage can exceed the limit if enough idle CPU cycles are available.</li>
        <li>This property is <code>false</code> by default.</li>
        <p class="note warning"><strong>Warning: </strong> If <code>enforce\_cpu\_limit</code> is set <code>true</code>,
        verify that <code>cpu_limit</code> is set high enough for FIM to execute normally.
        If the limit is too strict, FIM fails to start.</p>

    </ul>
    <p class="note warning"><strong>Warning: </strong> If <code>enforce\_cpu\_limit</code> is set <code>true</code>,
    verify that <code>cpu_limit</code> is set high enough for FIM to execute normally.
    If the limit is too strict, FIM fails to start.</p>

    <code><strong>memory\_limit</strong></code>: <a name="memory_limit"></a>
    <ul>
      <li>Limits the maximum amount of user memory (including file cache) in bytes used by FIM.</li>
      <li>Has the default value <code>536870912</code>.</li>
    </ul>

    <code><strong>heartbeat\_interval</strong></code>: <a name="heartbeat_interval"></a>
    <ul>
      <li>To enable the heartbeat interval, set this value to an integer greater than <code>0</code> .
        If you set a negative value, an error occurs. </li>
      <li>To disable the heartbeat interval, set this value to <code>0</code>.</li>
      <li>The default value is <code>600</code>. </li>
    </ul>



##<a id="download"></a>Download the FIM Add-on

To download the FIM Add-on software binary file and move it to your Ops Manager
VM, follow the steps below. If you intend to run the FIM
Add-on on a PCF deployment that includes services or components that use Ubuntu
Xenial stemcells, download FIM Add-on v1.2.22 or later.

1. Download the FIM Add-on software binary file from
[Pivotal Network](https://network.pivotal.io/products/p-fim-addon) to your local machine.

2. Copy the binary file to your Ops Manager VM by running the following command:

    ```
    scp -i PATH-TO-PRIVATE-KEY fim-release.tgz ubuntu@YOUR-OPS-MANAGER-VM-IP:
    ```
    For example:

    <pre class="terminal">$ scp -i ~/.ssh/my-key.pem fim-1.2.23.tar.gz ubuntu@192.0.2.0:</pre>

3. Copy the FIM runtime configuration `fim.yml` file to your Ops Manager instance by running the following command:

    ```
    scp -i PATH-TO-PRIVATE-KEY fim.yml ubuntu@YOUR-OPS-MANAGER-VM-IP:
    ```

    For example:

    <pre class="terminal">$ scp -i ~/.ssh/my-key.pem fim.yml ubuntu@192.0.2.0:</pre>

4. [Log in to the Ops Manager VM with SSH](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#ssh).

5. Navigate to the location of the binary file on the Ops Manager VM by running the following command:

    ```
    cd PATH-TO-BINARY-FILE
    ```

    For example:

    <pre class="terminal">$ cd ~</pre>

##<a id="deploy"></a> Deploy the FIM Add-on

Perform the following steps to deploy the FIM Add-on:

1. Upload your release, specifying the path to the tarballed FIM binary file, by running the following command:

    ```
    bosh -e BOSH-ENVIRONMENT upload-release PATH-TO-NEW-FIM-RELEASE
    ```

    For example:

    <pre class="terminal">$ bosh -e my-env upload-release fim-1.2.23.tar.gz</pre>

1. <a name="update"></a>Update your runtime configuration to include the FIM Add-on,
   specifying the path to the `fim.yml` file you created earlier, by running the following command:

    ```
    bosh -e BOSH-ENVIRONMENT update-runtime-config --name=fim /tmp/fim.yml
    ```

    For example:

    <pre class="terminal">$ bosh -e my-env update-runtime-config --name=fim fim.yml</pre>

    <p class="note"><strong>Note</strong>: If you installed other BOSH add-ons,
    you must merge the FIM runtime configuration into your existing add-on runtime configuration.
    Append the contents of <code>fim.yml</code> to your existing add-on YAML file.</p>

1. Verify that your runtime configuration changes match what you specified in the manifest file.

    ```
    bosh -e BOSH-ENVIRONMENT runtime-config --name fim
    ```

    For example:
    <pre class="terminal">
    $ bosh -e my-env runtime-config --name=fim
    </pre>

    This command returns your updated FIM runtime configuration. For example:

    <pre class="terminal">
    Acting as user 'admin' on 'micro'
    releases:
    <span>-</span> name: fim
      version: 1.2.23
    addons:
      name: fim
        jobs:
        <span>-</span> name: fim
          release: fim
    ...
    </pre>

1. Navigate to the **Installation Dashboard** in Ops Manager.

1. If you are using Ops Manager v2.3 or later, click **Review Pending Changes**.
   For more information about this Ops Manager page,
   see [Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/customizing/review-pending-changes.html).

1. Click **Apply Changes**.

##<a id="alerts"></a> Configure Forwarding for FIM Alerts

The FIM BOSH release writes all alerts to the syslogs of the VMs in your deployment.
You can use syslog forwarding to forward the alerts to a syslog aggregator.

* **Using the Pivotal Application Service (PAS) tile**:
Follow the steps to configure system logging in PAS in [Configuring Logging in PAS](https://docs.pivotal.io/pivotalcf/2-4/opsguide/logging-config-opsman.html).
The syslog aggregator that you specify receives all alerts generated on PAS VMs, including the FIM alerts.
* **Using the syslog BOSH release**: You can use the syslog BOSH release to forward system logs.
See [syslog-release](https://github.com/cloudfoundry/syslog-release) in GitHub for instructions.

<p class="note"><strong>Note</strong>: When you configure syslog forwarding, ensure there is enough disk space for the logs.
Make sure that the log rotation is frequent enough. If in doubt, rotate the logs hourly or when they reach a certain size.
Pivotal recommends forwarding logs to a remote syslog aggregation system.</p>

## <a id="verify"></a>Verify the Installation

1. Use `bosh ssh` to log in to one of the VMs in your deployment with SSH.
   For more information, see [BOSH SSH](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#bosh-ssh).

1. Run the following command:

    ```
    monit summary
    ```

1. Look for the following process in the output:

    <pre class="terminal">The Monit daemon 5.2.4 uptime: 3d 0h 56m
    Process 'fim'                 running</pre>

1. If the `fim` process is not displayed, do the following:

    1. Start the `fim` process by running the following command:

        ```
        monit start fim
        ```

    1. Run the following command again:

        ```
        monit summary
        ```

    1. Check for the `fim` process again. If it does not display, check the `/var/vcap/sys/log/fim` logs for errors.

1. If the `fim` process is displayed, do the following:

    1. Enter the following command:

        ```
        touch /bin/hackertool
        ```

    1. Enter the following command:

        ```
        grep hackertool /var/log/messages
        ```

1. Check for a message that a new file has been created. For example:
<pre class="terminal">Sep 22 23:57:07 qvsfgv0qnrk filesnitch[3040]: CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/bin/hackertool" hostname="f98968fe-501a-470b-819a-c4a2a7ac45c8" opname="CREATE" optype=1 ts=1474588627</pre>
